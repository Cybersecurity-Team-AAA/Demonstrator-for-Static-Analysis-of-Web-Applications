import os, string, itertools, hashlib, time

def createDictionary():
    chars = string.ascii_lowercase
    os.system("echo USER_PASSWORD,ENCRYPTION_KEY,CIPHERTEXT >> dictionary.txt")
    for i in range(1,5):   # Combinates all the characters to generate all the possible characters of length i       
        for combination in itertools.product(chars, repeat=i):
            testPwd = "".join(combination)  # Converts tuple to string            
            pwdHash = hashlib.sha256()  # Initialize pwdHash
            pwdHash.update(testPwd.encode("utf-8"))  # Computes the password hash
            key = pwdHash.hexdigest()[0:32]  # Gets the first 32 hexadecimal digits
            os.system("echo " + testPwd + "," + key + ",$(openssl enc -e -cipher -aes-128-ecb -in plaintext.txt -K " + key + " -nopad | openssl enc -base64) >> dictionary.txt")                  
    return

def findPassword(transaction):
    print("USER_PASSWORD, ENCRYPTION_KEY, CIPHERTEXT")
    x = os.system("cat dictionary.txt | grep " + transaction);

if __name__ == "__main__":
    findPassword("yebw2hevfoQhgYKPfP8HwA")